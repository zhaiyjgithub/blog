# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ihms-api-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: go1.x
  region: us-east-1
  stage: dev
  httpApi:
    authorizers:
      customAuthorizer:
        type: request
        functionName: authorizer
        identitySource:
          - $request.header.X-Api-Key
          - $request.header.X-App-Name
        resultTtlInSeconds: 300
        enableSimpleResponses: true
        payloadVersion: "2.0"
  environment:
    message_table: ${self:service}-${opt:stage, self:provider.stage}-message
    stage: ${opt:stage, self:provider.stage}

package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  authorizer:
    handler: bin/authorizer
    environment:
      salt: ~!@9&6_!@$@56d
  sendMessage:
    handler: bin/sendMessage
    environment:
      sqs_sender_worker_queue_name: SenderWorker
      email_sender: chuck.zhaiyj@gmail.com
      email_sender_app_password: isnejfxzaniutstq
    events:
      - httpApi:
          path: /sendMessage
          method: post
          authorizer:
            name: customAuthorizer
  senderWorker:
    handler: bin/worker
    events:
      - sqs:
          batchSize: 10
          maximumBatchingWindow: 60
          arn:
            Fn::GetAtt:
              - SenderWorkerQueue
              - Arn
resources:
  Resources:
    MessagingTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:service}-${opt:stage, self:provider.stage}-message
        AttributeDefinitions:
          - AttributeName: OrganizationID
            AttributeType: S
          - AttributeName: CreatedAt
            AttributeType: S
          - AttributeName: MessageID
            AttributeType: S
        KeySchema:
          - AttributeName: OrganizationID
            KeyType: HASH
          - AttributeName: CreatedAt
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        GlobalSecondaryIndexes:
          - IndexName: MessageID-CreatedAt-index
            KeySchema:
              - AttributeName: MessageID
                KeyType: HASH
              - AttributeName: CreatedAt
                KeyType: RANGE
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - CallbackURL
                - CalbackParams
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    SenderWorkerQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "SenderWorker"
